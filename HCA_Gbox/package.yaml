# When in doubt, refer to <GranatumX_root>/gbox_installer/types/index.d.ts for the full schema.

# In GranatumX, many Gboxes with similar dependencies can share a single docker image to avoid unnecessary separation.
# This single docker image along with its specification (JSON or YAML) is called a "Gpackage".

# Here, the "id" is the ID of the Gpackage. It can be any string that can uniquely identify the Gpackage.
id: hca_test1:1
# This "meta" field in the root is for setting up the *default* metadata for all the Gboxes in this Gpackage. A lot of the time,
# all Gboxes in a Gpackage share the same maintainer (and maybe citations, etc.). Instead of repeating the same metadata under
# every Gbox, the DRY (don't-repeat-yourself) way of doing it is to put the default metadata here and omit these fields in each
# Gbox specification. The fields missing in each Gbox specification will be automatically filled with the default.
meta:
  maintainer:
    name: Harrison Li
    email: harrisonliding@gmail.com


# The "gboxes" field contains a list of gboxes to be included in the Gpackage. Each item in the list can be either an
# in-line object that contains the Gbox specification or the path (a string) to a different YAML file that has the Gbox
# specification.
gboxes:

        # This "id" is the ID of the Gbox. It can be any string that can uniquely identify the Gbox.
  - id: hca_test1-1

    # This "meta" field is the meta field for the Gbox
    meta:
      title: HCA Data Downloading
      subtitle: "download data to our server"
      description: 
        Choosee a  project and we will download data to our server from the HCA Database.

    # The "endpoints" are the backend hooks for GranatumX core to recognize. Currently only the "backend" endpoint is implemented.
    endpoints:
      # The "backend" field tells GranatumX how to execute a command, send in inputs, and get the ouptuts. Currently,
      # the "type: docker" is the only execution type recommended. The "image" and "cmd" field are assembled like this:
      # docker run <...params_injected_by_GranatumX...> <image> <cmd>
      backend:
        type: docker
        image: hca_test1
        cmd: python ./main.py

    # The "frontend" field defines the panels on the frontend. The "injectInto" field is the unique ID of the arg or
    # import. The difference between an "arg" and an "import" is: an "import" is something generated by a previous Gbox --
    # for example, an assay, or an annotation for genes or samples; an "arg" is a small piece of information gathered
    # from the user via the frontend panels.
    #
    # Again, refer to <GranatumX_root>/gbox_installer/types/index.d.ts for the exact schema.
    frontend:
      args:
        - type: select
          label: Project Name and ID
          choices:
                  - label:  A single-cell reference map of transcriptional states for human blood and tissue T cell activation
                    value: 4a95101c-9ffc-4f30-a809-f04518a23803
                  - label: A cell atlas of human thymic development defines T cell repertoire formation
                    value: c1810dbc-16d2-45c3-b45e-3e675f88d87b
          default: A single-cell reference map of transcriptional states for human blood and tissue T cell activation
          injectInto: HCADataset
